import {defineType, defineField} from 'sanity'

export default defineType({
  name: 'post',
  title: 'Posts',
  type: 'document',
  groups: [
    {name: 'content', title: 'Content'},
    {name: 'media', title: 'Media'},
    {name: 'seo', title: 'SEO'},
    {name: 'taxonomy', title: 'Categories & Tags'},
    {name: 'publishing', title: 'Publishing'}
  ],
  fields: [
    // Content Fields
    defineField({
      name: 'title',
      title: 'Title',
      type: 'string',
      group: 'content',
      validation: Rule => Rule.required().max(60).warning('Titles should be under 60 characters for SEO'),
      description: 'The main title of the article (60 chars max for SEO)'
    }),
    defineField({
      name: 'slug',
      title: 'URL Slug',
      type: 'slug',
      group: 'content',
      options: {
        source: 'title',
        maxLength: 96,
      },
      validation: Rule => Rule.required(),
      description: 'The URL path for this article (auto-generated from title)'
    }),
    defineField({
      name: 'excerpt',
      title: 'Excerpt',
      type: 'text',
      group: 'content',
      rows: 3,
      validation: Rule => Rule.max(200),
      description: 'Short summary for article previews (200 chars max)'
    }),
    defineField({
      name: 'body',
      title: 'Content Body',
      type: 'array',
      group: 'content',
      of: [
        {
          type: 'block',
          styles: [
            {title: 'Normal', value: 'normal'},
            {title: 'H2', value: 'h2'},
            {title: 'H3', value: 'h3'},
            {title: 'H4', value: 'h4'},
            {title: 'Quote', value: 'blockquote'}
          ],
          marks: {
            decorators: [
              {title: 'Bold', value: 'strong'},
              {title: 'Italic', value: 'em'},
              {title: 'Code', value: 'code'}
            ],
            annotations: [
              {
                title: 'URL',
                name: 'link',
                type: 'object',
                fields: [
                  {
                    title: 'URL',
                    name: 'href',
                    type: 'url',
                    validation: Rule => Rule.uri({
                      scheme: ['http', 'https', 'mailto', 'tel']
                    })
                  }
                ]
              }
            ]
          }
        },
        {
          type: 'image',
          options: {
            hotspot: true,
          },
          fields: [
            {
              name: 'alt',
              type: 'string',
              title: 'Alternative Text',
              description: 'Important for SEO and accessibility',
              validation: Rule => Rule.required()
            },
            {
              name: 'caption',
              type: 'string',
              title: 'Caption'
            }
          ]
        }
      ],
      validation: Rule => Rule.required(),
      description: 'The main article content (2000+ words for Tier 1 keywords)'
    }),

    // Media Fields
    defineField({
      name: 'featuredImage',
      title: 'Featured Image',
      type: 'image',
      group: 'media',
      options: {
        hotspot: true,
        accept: 'image/avif, image/webp, image/jpeg, image/png'
      },
      fields: [
        {
          name: 'alt',
          type: 'string',
          title: 'Alternative Text',
          validation: Rule => Rule.required(),
          description: 'Describe the image for SEO and accessibility'
        },
        {
          name: 'credit',
          type: 'string',
          title: 'Image Credit',
          description: 'e.g., "Generated by Flux Pro"'
        }
      ],
      validation: Rule => Rule.required(),
      description: 'Hero image in AVIF format (WebP fallback)'
    }),
    defineField({
      name: 'videoUrl',
      title: 'Optional Video URL',
      type: 'url',
      group: 'media',
      description: 'MUX video URL if available (optional enhancement)'
    }),

    // SEO Fields
    defineField({
      name: 'metaTitle',
      title: 'Meta Title',
      type: 'string',
      group: 'seo',
      validation: Rule => Rule.max(60).warning('Meta titles should be under 60 characters'),
      description: 'SEO title tag (defaults to title if empty)'
    }),
    defineField({
      name: 'metaDescription',
      title: 'Meta Description',
      type: 'text',
      group: 'seo',
      rows: 3,
      validation: Rule => Rule.max(160).warning('Meta descriptions should be under 160 characters'),
      description: 'SEO meta description (160 chars max)'
    }),
    defineField({
      name: 'focusKeyword',
      title: 'Focus Keyword',
      type: 'string',
      group: 'seo',
      validation: Rule => Rule.required(),
      description: 'Primary keyword this article targets'
    }),
    defineField({
      name: 'searchVolume',
      title: 'Monthly Search Volume',
      type: 'number',
      group: 'seo',
      description: 'From DataForSEO (e.g., 590 for "Cyprus golden visa")'
    }),
    defineField({
      name: 'cpc',
      title: 'Cost Per Click',
      type: 'number',
      group: 'seo',
      description: 'CPC value from DataForSEO (e.g., 2.41 for high-value keywords)'
    }),

    // Taxonomy Fields
    defineField({
      name: 'category',
      title: 'Category',
      type: 'reference',
      to: [{type: 'category'}],
      group: 'taxonomy',
      validation: Rule => Rule.required(),
      description: 'Primary category for organization'
    }),
    defineField({
      name: 'tags',
      title: 'Tags',
      type: 'array',
      of: [{type: 'reference', to: [{type: 'tag'}]}],
      group: 'taxonomy',
      description: 'Related topics for cross-linking'
    }),

    // Publishing Fields
    defineField({
      name: 'publishedAt',
      title: 'Published Date',
      type: 'datetime',
      group: 'publishing',
      initialValue: () => new Date().toISOString(),
      description: 'When this article was published'
    }),
    defineField({
      name: 'featured',
      title: 'Featured Article',
      type: 'boolean',
      group: 'publishing',
      initialValue: false,
      description: 'Show prominently on homepage'
    }),
    defineField({
      name: 'contentTier',
      title: 'Content Tier',
      type: 'string',
      group: 'publishing',
      options: {
        list: [
          {title: 'Tier 1 (2000+ words)', value: 'tier1'},
          {title: 'Tier 2 (1500+ words)', value: 'tier2'},
          {title: 'Tier 3 (1000+ words)', value: 'tier3'}
        ]
      },
      description: 'Content depth based on keyword value'
    }),
    defineField({
      name: 'generationCost',
      title: 'Generation Cost ($)',
      type: 'number',
      group: 'publishing',
      description: 'Total cost to generate this article (target: $0.01)'
    })
  ],

  preview: {
    select: {
      title: 'title',
      category: 'category.title',
      media: 'featuredImage',
      publishedAt: 'publishedAt',
      featured: 'featured'
    },
    prepare({title, category, media, publishedAt, featured}) {
      const date = publishedAt ? new Date(publishedAt).toLocaleDateString() : 'Draft'
      return {
        title: `${featured ? '⭐ ' : ''}${title}`,
        subtitle: `${category} · ${date}`,
        media
      }
    }
  }
})