---
// Mux animated GIF thumbnail - works even if video playback is restricted!
export interface Props {
  playbackId: string;
  title?: string;
  width?: number;
  height?: number;
  fps?: number;
  duration?: number;
}

const {
  playbackId,
  title = "Video",
  width = 640,
  height = 360,
  fps = 15, // Lower FPS for smaller file size
  duration = 5 // 5 seconds of animation
} = Astro.props;

// Mux animated GIF URL - this should work regardless of playback policy!
const gifUrl = `https://image.mux.com/${playbackId}/animated.gif?width=${width}&height=${height}&fps=${fps}&duration=${duration}`;

// Static thumbnail as fallback
const posterUrl = `https://image.mux.com/${playbackId}/thumbnail.jpg?width=${width}&height=${height}&time=5`;
---

<div class="relative w-full h-full overflow-hidden rounded-lg group cursor-pointer">
  <!-- Animated GIF that looks like a video -->
  <img
    src={gifUrl}
    alt={title}
    class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
    loading="lazy"
    onerror={`this.onerror=null; this.src='${posterUrl}'`}
  />
  
  <!-- Optional play button overlay to make it look interactive -->
  <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
    <div class="w-12 h-12 bg-white bg-opacity-90 rounded-full flex items-center justify-center shadow-lg">
      <svg class="w-5 h-5 text-gray-800 ml-1" fill="currentColor" viewBox="0 0 20 20">
        <path d="M8 5v10l6-5z"/>
      </svg>
    </div>
  </div>
</div>